---
export interface Props {}
---

<style>
  .search-wrapper {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    position: relative;
  }

  .search-input {
    border: none;
    border-bottom: 1px solid #000;
    background: transparent;
    padding: 0.3rem 0.5rem;
    font-size: 0.9rem;
    width: 0;
    opacity: 0;
    transition: width 0.3s ease, opacity 0.3s ease;
    outline: none;
  }

  .search-wrapper.open .search-input {
    width: 150px;
    opacity: 1;
  }

  .search-icon {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1rem;
  }

  .icon.clicked {
    animation: popRotate 0.3s ease;
  }

  @keyframes popRotate {
    0% {
      transform: scale(1) rotate(0deg);
    }
    50% {
      transform: scale(1.3) rotate(15deg);
    }
    100% {
      transform: scale(1) rotate(0deg);
    }
  }
</style>

<div class="search-wrapper" id="searchBox">
  <button class="search-icon" onclick="window.toggleSearch()">
    <svg
      width="20"
      height="20"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="icon"
    >
      <circle cx="11" cy="11" r="8" />
      <line x1="21" y1="21" x2="16.65" y2="16.65" />
    </svg>
  </button>
  <input
  type="search"
  id="searchInput"
  class="search-input"
  placeholder="Search..."
  onkeydown="window.handleSearchEnter(event)"
  oninput={Astro.request.url.pathname === '/' ? "window.filterBySearch()" : undefined}
/>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.querySelector('.search-icon');
    const icon = button.querySelector('svg');

    button.addEventListener('click', () => {
      icon.classList.add('clicked');
      setTimeout(() => {
        icon.classList.remove('clicked');
      }, 300);
    });
  });
</script>
