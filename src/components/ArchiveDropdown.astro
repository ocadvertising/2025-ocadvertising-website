---
const { links } = Astro.props;
const dropdownId = `dropdown-${Math.random().toString(36).substring(2, 9)}`;
---

<style>
  .archive-dropdown {
    position: relative;
    display: inline-block;
  }

  .archive-dropdown a {
    text-decoration: none;
    color: black;
    padding-bottom: 2px;
    position: relative;
    transition: color 0.2s ease;
  }

  .archive-dropdown a::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 1px;
    background: var(--text-color, black);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.2s ease;
  }

  .archive-dropdown a:hover {
    color: #555;
  }

  .archive-dropdown a:hover::after {
    transform: scaleX(1);
  }

  .dropdown-content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    position: absolute;
    background-color: var(--background, white);
    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
    z-index: 1;
    min-width: 6ch;
    left: -1rem;
    top: 1.5rem;
    opacity: 0;
    transform: translateY(-10px);
    max-height: 0;
    overflow: hidden;
    padding: 1rem 2rem;
    transition: opacity 0.3s ease, transform 0.3s ease, max-height 0.3s ease, padding 0.3s ease;
  }

  .archive-dropdown.open .dropdown-content {
    opacity: 1;
    transform: translateY(0);
    max-height: 2000px; /* Ensure the dropdown has enough space */
    padding: 1rem 2rem; /* Ensure padding is kept */
  }

  .dropdown-content a {
    color: black;
    text-decoration: none;
    display: block;
  }
</style>

<div class="archive-dropdown" id={dropdownId}>
  <a href="#" onclick={`toggleDropdown('${dropdownId}'); return false;`}>Archives</a>
  <div class="dropdown-content">
    {links.map((link) => (
      <a href={link.url} key={link.label} target="_blank" rel="noopener noreferrer">{link.label}</a>
    ))}
  </div>
</div>

<script is:inline>
  window.toggleDropdown = function(id) {
    const dropdown = document.getElementById(id);
    const wasOpen = dropdown.classList.contains('open');

    // Close all open dropdowns
    document.querySelectorAll('.archive-dropdown.open').forEach(el => {
      el.classList.remove('open');
    });

    // Toggle this one
    if (!wasOpen) {
      dropdown.classList.add('open');
    }
  };

  document.addEventListener('click', (e) => {
    const openDropdown = document.querySelector('.archive-dropdown.open');
    if (
      openDropdown &&
      !openDropdown.contains(e.target)
    ) {
      openDropdown.classList.remove('open');
    }
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      const openDropdown = document.querySelector('.archive-dropdown.open');
      if (openDropdown) {
        openDropdown.classList.remove('open');
      }
    }
  });
</script>
